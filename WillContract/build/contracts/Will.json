{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_c1",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_c2",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Child1",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Child2",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amountToSendToEachChild",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "c1b",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "c2b",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "children",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "declareDead",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parentState",
      "outputs": [
        {
          "internalType": "enum Will.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revealBalance1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revealBalance2",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Will.sol"
  },
  "ast": {
    "absolutePath": "contracts/Will.sol",
    "exportedSymbols": {
      "Will": [
        201
      ]
    },
    "id": 202,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Will",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 201,
        "linearizedBaseContracts": [
          201
        ],
        "name": "Will",
        "nameLocation": "61:4:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "92:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "69:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "69:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d42db0fc",
            "id": 5,
            "mutability": "mutable",
            "name": "Child1",
            "nameLocation": "123:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "100:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "100:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06661abd",
            "id": 7,
            "mutability": "mutable",
            "name": "count",
            "nameLocation": "144:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "132:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "132:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3b10359a",
            "id": 9,
            "mutability": "mutable",
            "name": "Child2",
            "nameLocation": "175:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "152:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "152:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "209ebc08",
            "id": 11,
            "mutability": "mutable",
            "name": "isPaid",
            "nameLocation": "196:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "184:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 10,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "184:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "49ca0ce2",
            "id": 13,
            "mutability": "mutable",
            "name": "c1b",
            "nameLocation": "220:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "205:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "205:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78c46c4c",
            "id": 15,
            "mutability": "mutable",
            "name": "c2b",
            "nameLocation": "241:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "226:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "226:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69d9615e",
            "id": 25,
            "mutability": "mutable",
            "name": "amountToSendToEachChild",
            "nameLocation": "262:23:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "247:68:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "247:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 24,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "components": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 19,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "297:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Will_$201",
                            "typeString": "contract Will"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Will_$201",
                            "typeString": "contract Will"
                          }
                        ],
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "289:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "289:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "289:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "303:7:0",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "289:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 22,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "288:23:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "hexValue": "32",
                "id": 23,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "314:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "src": "288:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5ed1a5d",
            "id": 28,
            "mutability": "mutable",
            "name": "parentState",
            "nameLocation": "331:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "318:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$50",
              "typeString": "enum Will.State"
            },
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "State",
                "nameLocations": [
                  "318:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50,
                "src": "318:5:0"
              },
              "referencedDeclaration": 50,
              "src": "318:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$50",
                "typeString": "enum Will.State"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7002ce42",
            "id": 35,
            "mutability": "mutable",
            "name": "children",
            "nameLocation": "371:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 201,
            "src": "345:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$2_storage",
              "typeString": "address payable[2]"
            },
            "typeName": {
              "baseType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "345:15:0",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 31,
              "length": {
                "hexValue": "32",
                "id": 30,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "361:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "ArrayTypeName",
              "src": "345:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$2_storage_ptr",
                "typeString": "address payable[2]"
              }
            },
            "value": {
              "components": [
                {
                  "id": 32,
                  "name": "Child1",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5,
                  "src": "383:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                {
                  "id": 33,
                  "name": "Child2",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9,
                  "src": "391:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "id": 34,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "382:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$2_memory_ptr",
                "typeString": "address payable[2] memory"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "420:69:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 38,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "432:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "436:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "432:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 40,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "447:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "432:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420746865206f776e65722121",
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "454:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f47efdf0040b52dfaa198c29cb9fe0c76e1aac686099711188a13a9faed4c87",
                          "typeString": "literal_string \"You are not the owner!!\""
                        },
                        "value": "You are not the owner!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f47efdf0040b52dfaa198c29cb9fe0c76e1aac686099711188a13a9faed4c87",
                          "typeString": "literal_string \"You are not the owner!!\""
                        }
                      ],
                      "id": 37,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "424:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "424:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "424:56:0"
                },
                {
                  "id": 45,
                  "nodeType": "PlaceholderStatement",
                  "src": "484:1:0"
                }
              ]
            },
            "id": 47,
            "name": "onlyOwner",
            "nameLocation": "411:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "420:0:0"
            },
            "src": "402:87:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "canonicalName": "Will.State",
            "id": 50,
            "members": [
              {
                "id": 48,
                "name": "Alive",
                "nameLocation": "506:5:0",
                "nodeType": "EnumValue",
                "src": "506:5:0"
              },
              {
                "id": 49,
                "name": "Dead",
                "nameLocation": "515:4:0",
                "nodeType": "EnumValue",
                "src": "515:4:0"
              }
            ],
            "name": "State",
            "nameLocation": "497:5:0",
            "nodeType": "EnumDefinition",
            "src": "492:30:0"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "578:114:0",
              "statements": [
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "582:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 60,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "598:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "602:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "598:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "590:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "590:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "590:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "582:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "582:27:0"
                },
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "parentState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "613:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$50",
                        "typeString": "enum Will.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 66,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "627:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$50_$",
                          "typeString": "type(enum Will.State)"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "633:5:0",
                      "memberName": "Alive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "627:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$50",
                        "typeString": "enum Will.State"
                      }
                    },
                    "src": "613:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$50",
                      "typeString": "enum Will.State"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "613:25:0"
                },
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70,
                      "name": "Child1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "642:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 73,
                          "name": "_c1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "659:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "651:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "651:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "651:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "642:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "642:21:0"
                },
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77,
                      "name": "Child2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "667:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 80,
                          "name": "_c2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "684:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "676:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 78,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "676:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "676:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "667:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "667:21:0"
                }
              ]
            },
            "id": 85,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_c1",
                  "nameLocation": "553:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "537:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_c2",
                  "nameLocation": "574:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "558:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "536:42:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:0:0"
            },
            "scope": 201,
            "src": "525:167:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "725:123:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89,
                          "name": "count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "737:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "745:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "737:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 88,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "729:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "729:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "729:18:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$50",
                          "typeString": "enum Will.State"
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 95,
                          "name": "parentState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "759:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$50",
                            "typeString": "enum Will.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 96,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "774:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$50_$",
                              "typeString": "type(enum Will.State)"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "780:5:0",
                          "memberName": "Alive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48,
                          "src": "774:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$50",
                            "typeString": "enum Will.State"
                          }
                        },
                        "src": "759:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 94,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "751:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "751:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "751:35:0"
                },
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101,
                      "name": "parentState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "790:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$50",
                        "typeString": "enum Will.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 102,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "804:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$50_$",
                          "typeString": "type(enum Will.State)"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "810:4:0",
                      "memberName": "Dead",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49,
                      "src": "804:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$50",
                        "typeString": "enum Will.State"
                      }
                    },
                    "src": "790:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$50",
                      "typeString": "enum Will.State"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "790:24:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 106,
                      "name": "transferEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "818:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "818:13:0"
                },
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "835:7:0",
                    "subExpression": {
                      "id": 109,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "835:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "835:7:0"
                }
              ]
            },
            "functionSelector": "6f92e149",
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declareDead",
            "nameLocation": "704:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "715:2:0"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "725:0:0"
            },
            "scope": 201,
            "src": "695:153:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "899:316:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_State_$50",
                            "typeString": "enum Will.State"
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 119,
                            "name": "parentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "911:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$50",
                              "typeString": "enum Will.State"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 120,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "926:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$50_$",
                                "typeString": "type(enum Will.State)"
                              }
                            },
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "932:4:0",
                            "memberName": "Dead",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49,
                            "src": "926:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$50",
                              "typeString": "enum Will.State"
                            }
                          },
                          "src": "911:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 123,
                            "name": "isPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "940:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "950:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "940:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "911:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f72",
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "956:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        },
                        "value": "Error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        }
                      ],
                      "id": 118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "903:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "903:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "903:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 134,
                        "name": "amountToSendToEachChild",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "989:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 130,
                          "name": "children",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "968:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$2_storage",
                            "typeString": "address payable[2] storage ref"
                          }
                        },
                        "id": 132,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "977:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "968:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "980:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "968:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "968:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 141,
                        "name": "amountToSendToEachChild",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1038:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 137,
                          "name": "children",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "1017:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$2_storage",
                            "typeString": "address payable[2] storage ref"
                          }
                        },
                        "id": 139,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1026:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1017:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1029:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1017:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1017:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1017:45:0"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "currentBalance",
                      "nameLocation": "1074:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "1066:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1066:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 148,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1099:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Will_$201",
                            "typeString": "contract Will"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Will_$201",
                            "typeString": "contract Will"
                          }
                        ],
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1091:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 146,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1091:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1091:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1105:7:0",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1091:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1066:46:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 152,
                      "name": "currentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "1119:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1136:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1119:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "1188:24:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 163,
                            "name": "isPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "1193:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1203:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1193:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 166,
                        "nodeType": "ExpressionStatement",
                        "src": "1193:14:0"
                      }
                    ]
                  },
                  "id": 168,
                  "nodeType": "IfStatement",
                  "src": "1116:96:0",
                  "trueBody": {
                    "id": 162,
                    "nodeType": "Block",
                    "src": "1138:46:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 159,
                              "name": "currentBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145,
                              "src": "1164:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 155,
                                "name": "children",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35,
                                "src": "1143:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$2_storage",
                                  "typeString": "address payable[2] storage ref"
                                }
                              },
                              "id": 157,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1152:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1143:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1155:8:0",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "1143:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1143:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 161,
                        "nodeType": "ExpressionStatement",
                        "src": "1143:36:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "59852686",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 115,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "889:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47,
                  "src": "889:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "889:9:0"
              }
            ],
            "name": "transferEth",
            "nameLocation": "860:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "871:2:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:0:0"
            },
            "scope": 201,
            "src": "851:364:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1263:91:0",
              "statements": [
                {
                  "expression": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 175,
                      "name": "c1b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1267:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 176,
                          "name": "children",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "1273:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$2_storage",
                            "typeString": "address payable[2] storage ref"
                          }
                        },
                        "id": 178,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1282:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1273:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1285:7:0",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1273:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1267:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:25:0"
                },
                {
                  "expression": {
                    "id": 182,
                    "name": "c1b",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "1303:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 174,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "1296:10:0"
                }
              ]
            },
            "functionSelector": "88b0cbc9",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revealBalance1",
            "nameLocation": "1226:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1240:2:0"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1258:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1258:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:6:0"
            },
            "scope": 201,
            "src": "1217:137:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "1403:91:0",
              "statements": [
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 190,
                      "name": "c2b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1451:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 191,
                          "name": "children",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "1457:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$2_storage",
                            "typeString": "address payable[2] storage ref"
                          }
                        },
                        "id": 193,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1466:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1457:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1469:7:0",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1457:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1451:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "1451:25:0"
                },
                {
                  "expression": {
                    "id": 197,
                    "name": "c2b",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "1487:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 189,
                  "id": 198,
                  "nodeType": "Return",
                  "src": "1480:10:0"
                }
              ]
            },
            "functionSelector": "138ecfd5",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revealBalance2",
            "nameLocation": "1366:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1380:2:0"
            },
            "returnParameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "1398:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1397:6:0"
            },
            "scope": 201,
            "src": "1357:137:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 202,
        "src": "52:1446:0",
        "usedErrors": []
      }
    ],
    "src": "27:1471:0"
  },
  "bytecode": "608060405261000f600247610122565b600655604080518082019091526001546001600160a01b0390811682526003541660208201526100439060089060026100b5565b5034801561005057600080fd5b5060405161070138038061070183398101604081905261006f91610160565b60008054336001600160a01b0319918216179091556007805460ff191690556001805482166001600160a01b039485161790556003805490911691909216179055610193565b82600281019282156100fd579160200282015b828111156100fd57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906100c8565b5061010992915061010d565b5090565b5b80821115610109576000815560010161010e565b60008261013f57634e487b7160e01b600052601260045260246000fd5b500490565b80516001600160a01b038116811461015b57600080fd5b919050565b6000806040838503121561017357600080fd5b61017c83610144565b915061018a60208401610144565b90509250929050565b61055f806101a26000396000f3fe6080604052600436106100dd5760003560e01c80636f92e1491161007f57806388b0cbc91161005957806388b0cbc9146102195780638da5cb5b1461023d578063d42db0fc1461025d578063f5ed1a5d1461027d57600080fd5b80636f92e149146101ce5780637002ce42146101e357806378c46c4c1461020357600080fd5b80633b10359a116100bb5780633b10359a1461016057806349ca0ce21461019857806359852686146101ae57806369d9615e146101b857600080fd5b806306661abd146100e2578063138ecfd51461010b578063209ebc081461012f575b600080fd5b3480156100ee57600080fd5b506100f860025481565b6040519081526020015b60405180910390f35b34801561011757600080fd5b506009546001600160a01b03163160058190556100f8565b34801561013b57600080fd5b5060035461015090600160a01b900460ff1681565b6040519015158152602001610102565b34801561016c57600080fd5b50600354610180906001600160a01b031681565b6040516001600160a01b039091168152602001610102565b3480156101a457600080fd5b506100f860045481565b6101b66102a4565b005b3480156101c457600080fd5b506100f860065481565b3480156101da57600080fd5b506101b661042e565b3480156101ef57600080fd5b506101806101fe3660046104ab565b61048b565b34801561020f57600080fd5b506100f860055481565b34801561022557600080fd5b506008546001600160a01b03163160048190556100f8565b34801561024957600080fd5b50600054610180906001600160a01b031681565b34801561026957600080fd5b50600154610180906001600160a01b031681565b34801561028957600080fd5b506007546102979060ff1681565b60405161010291906104da565b6000546001600160a01b031633146103035760405162461bcd60e51b815260206004820152601760248201527f596f7520617265206e6f7420746865206f776e6572212100000000000000000060448201526064015b60405180910390fd5b600160075460ff16600181111561031c5761031c6104c4565b1480156103385750600354600160a01b900460ff161515600114155b61036c5760405162461bcd60e51b815260206004820152600560248201526422b93937b960d91b60448201526064016102fa565b6008546006546040516001600160a01b03909216916108fc82150291906000818181858888f193505050501580156103a8573d6000803e3d6000fd5b506009546006546040516001600160a01b03909216916108fc82150291906000818181858888f193505050501580156103e5573d6000803e3d6000fd5b5047801561042b576008546040516001600160a01b03909116906108fc8315029083906000818181858888f19350505050158015610427573d6000803e3d6000fd5b5050565b50565b600280541061043c57600080fd5b600060075460ff166001811115610455576104556104c4565b1461045f57600080fd5b6007805460ff191660011790556104746102a4565b6002805490600061048483610502565b9190505550565b6008816002811061049b57600080fd5b01546001600160a01b0316905081565b6000602082840312156104bd57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600283106104fc57634e487b7160e01b600052602160045260246000fd5b91905290565b60006001820161052257634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212204d50647f25da57aec246e7b832526b854e7465f054bd810ac6b452e53700d6bc64736f6c63430008100033",
  "bytecodeSha1": "a2046ceafc5f8e84bffb65e85a89db1167565ee3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.16+commit.07a7930e"
  },
  "contractName": "Will",
  "coverageMap": {
    "branches": {
      "0": {
        "Will.declareDead": {
          "14": [
            737,
            746,
            true
          ],
          "15": [
            759,
            785,
            true
          ]
        },
        "Will.transferEth": {
          "11": [
            911,
            936,
            false
          ],
          "12": [
            940,
            954,
            true
          ],
          "13": [
            1119,
            1137,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Will.declareDead": {
          "6": [
            729,
            747
          ],
          "7": [
            751,
            786
          ],
          "8": [
            790,
            814
          ],
          "9": [
            818,
            831
          ],
          "10": [
            835,
            842
          ]
        },
        "Will.revealBalance1": {
          "1": [
            1267,
            1292
          ]
        },
        "Will.revealBalance2": {
          "0": [
            1451,
            1476
          ]
        },
        "Will.transferEth": {
          "2": [
            903,
            964
          ],
          "3": [
            968,
            1013
          ],
          "4": [
            1017,
            1062
          ],
          "5": [
            1143,
            1179
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100dd5760003560e01c80636f92e1491161007f57806388b0cbc91161005957806388b0cbc9146102195780638da5cb5b1461023d578063d42db0fc1461025d578063f5ed1a5d1461027d57600080fd5b80636f92e149146101ce5780637002ce42146101e357806378c46c4c1461020357600080fd5b80633b10359a116100bb5780633b10359a1461016057806349ca0ce21461019857806359852686146101ae57806369d9615e146101b857600080fd5b806306661abd146100e2578063138ecfd51461010b578063209ebc081461012f575b600080fd5b3480156100ee57600080fd5b506100f860025481565b6040519081526020015b60405180910390f35b34801561011757600080fd5b506009546001600160a01b03163160058190556100f8565b34801561013b57600080fd5b5060035461015090600160a01b900460ff1681565b6040519015158152602001610102565b34801561016c57600080fd5b50600354610180906001600160a01b031681565b6040516001600160a01b039091168152602001610102565b3480156101a457600080fd5b506100f860045481565b6101b66102a4565b005b3480156101c457600080fd5b506100f860065481565b3480156101da57600080fd5b506101b661042e565b3480156101ef57600080fd5b506101806101fe3660046104ab565b61048b565b34801561020f57600080fd5b506100f860055481565b34801561022557600080fd5b506008546001600160a01b03163160048190556100f8565b34801561024957600080fd5b50600054610180906001600160a01b031681565b34801561026957600080fd5b50600154610180906001600160a01b031681565b34801561028957600080fd5b506007546102979060ff1681565b60405161010291906104da565b6000546001600160a01b031633146103035760405162461bcd60e51b815260206004820152601760248201527f596f7520617265206e6f7420746865206f776e6572212100000000000000000060448201526064015b60405180910390fd5b600160075460ff16600181111561031c5761031c6104c4565b1480156103385750600354600160a01b900460ff161515600114155b61036c5760405162461bcd60e51b815260206004820152600560248201526422b93937b960d91b60448201526064016102fa565b6008546006546040516001600160a01b03909216916108fc82150291906000818181858888f193505050501580156103a8573d6000803e3d6000fd5b506009546006546040516001600160a01b03909216916108fc82150291906000818181858888f193505050501580156103e5573d6000803e3d6000fd5b5047801561042b576008546040516001600160a01b03909116906108fc8315029083906000818181858888f19350505050158015610427573d6000803e3d6000fd5b5050565b50565b600280541061043c57600080fd5b600060075460ff166001811115610455576104556104c4565b1461045f57600080fd5b6007805460ff191660011790556104746102a4565b6002805490600061048483610502565b9190505550565b6008816002811061049b57600080fd5b01546001600160a01b0316905081565b6000602082840312156104bd57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600283106104fc57634e487b7160e01b600052602160045260246000fd5b91905290565b60006001820161052257634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212204d50647f25da57aec246e7b832526b854e7465f054bd810ac6b452e53700d6bc64736f6c63430008100033",
  "deployedSourceMap": "52:1446:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;132:17;;;;;;;;;;;;;;;;;;;160:25:1;;;148:2;133:18;132:17:0;;;;;;;;1357:137;;;;;;;;;;-1:-1:-1;1457:11:0;;-1:-1:-1;;;;;1457:11:0;:19;1451:3;:25;;;1357:137;;184:18;;;;;;;;;;-1:-1:-1;184:18:0;;;;-1:-1:-1;;;184:18:0;;;;;;;;;361:14:1;;354:22;336:41;;324:2;309:18;184::0;196:187:1;152:29:0;;;;;;;;;;-1:-1:-1;152:29:0;;;;-1:-1:-1;;;;;152:29:0;;;;;;-1:-1:-1;;;;;568:32:1;;;550:51;;538:2;523:18;152:29:0;388:219:1;205:18:0;;;;;;;;;;;;;;;;851:364;;;:::i;:::-;;247:68;;;;;;;;;;;;;;;;695:153;;;;;;;;;;;;;:::i;345:53::-;;;;;;;;;;-1:-1:-1;345:53:0;;;;;:::i;:::-;;:::i;226:18::-;;;;;;;;;;;;;;;;1217:137;;;;;;;;;;-1:-1:-1;1273:8:0;:11;-1:-1:-1;;;;;1273:11:0;:19;1267:3;:25;;;1217:137;;69:28;;;;;;;;;;-1:-1:-1;69:28:0;;;;-1:-1:-1;;;;;69:28:0;;;100:29;;;;;;;;;;-1:-1:-1;100:29:0;;;;-1:-1:-1;;;;;100:29:0;;;318:24;;;;;;;;;;-1:-1:-1;318:24:0;;;;;;;;;;;;;;;:::i;851:364::-;447:5;;-1:-1:-1;;;;;447:5:0;432:10;:20;424:56;;;;-1:-1:-1;;;424:56:0;;1604:2:1;424:56:0;;;1586:21:1;1643:2;1623:18;;;1616:30;1682:25;1662:18;;;1655:53;1725:18;;424:56:0;;;;;;;;;926:10:::1;911:11;::::0;::::1;;::::0;:25;::::1;;;;;;:::i;:::-;;:43;;;;-1:-1:-1::0;940:6:0::1;::::0;-1:-1:-1;;;940:6:0;::::1;;;:14;;950:4;940:14;;911:43;903:61;;;::::0;-1:-1:-1;;;903:61:0;;1956:2:1;903:61:0::1;::::0;::::1;1938:21:1::0;1995:1;1975:18;;;1968:29;-1:-1:-1;;;2013:18:1;;;2006:35;2058:18;;903:61:0::1;1754:328:1::0;903:61:0::1;968:8;:11:::0;989:23:::1;::::0;968:45:::1;::::0;-1:-1:-1;;;;;968:11:0;;::::1;::::0;:45:::1;::::0;::::1;;::::0;989:23;977:1:::1;968:45:::0;977:1;968:45;989:23;968:11;:45;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1017:11:0;;1038:23:::1;::::0;1017:45:::1;::::0;-1:-1:-1;;;;;1017:11:0;;::::1;::::0;:45:::1;::::0;::::1;;::::0;1038:23;1017:11:::1;:45:::0;:11;:45;1038:23;1017:11;:45;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1091:21:0::1;1119:18:::0;;1116:96:::1;;1143:8;:11:::0;:36:::1;::::0;-1:-1:-1;;;;;1143:11:0;;::::1;::::0;:36:::1;::::0;::::1;;::::0;;;1152:1:::1;1143:36:::0;1152:1;1143:36;;:11;:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;899:316;851:364::o:0;1116:96::-:1;899:316;851:364::o:0;695:153::-;745:1;737:5;;:9;729:18;;;;;;774:11;759;;;;;:26;;;;;;;:::i;:::-;;751:35;;;;;;790:11;:24;;-1:-1:-1;;790:24:0;804:10;790:24;;;818:13;:11;:13::i;:::-;835:5;:7;;;:5;:7;;;:::i;:::-;;;;;;695:153::o;345:53::-;;;;;;;;;;;;;;-1:-1:-1;;;;;345:53:0;;-1:-1:-1;345:53:0;:::o;612:180:1:-;671:6;724:2;712:9;703:7;699:23;695:32;692:52;;;740:1;737;730:12;692:52;-1:-1:-1;763:23:1;;612:180;-1:-1:-1;612:180:1:o;797:127::-;858:10;853:3;849:20;846:1;839:31;889:4;886:1;879:15;913:4;910:1;903:15;929:336;1069:2;1054:18;;1102:1;1091:13;;1081:144;;1147:10;1142:3;1138:20;1135:1;1128:31;1182:4;1179:1;1172:15;1210:4;1207:1;1200:15;1081:144;1234:25;;;929:336;:::o;2087:232::-;2126:3;2147:17;;;2144:140;;2206:10;2201:3;2197:20;2194:1;2187:31;2241:4;2238:1;2231:15;2269:4;2266:1;2259:15;2144:140;-1:-1:-1;2311:1:1;2300:13;;2087:232::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    52,
    1498
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F92E149 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x88B0CBC9 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x88B0CBC9 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xD42DB0FC EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xF5ED1A5D EQ PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6F92E149 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x7002CE42 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x78C46C4C EQ PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3B10359A GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x3B10359A EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x49CA0CE2 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x59852686 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x69D9615E EQ PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x138ECFD5 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x209EBC08 EQ PUSH2 0x12F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH2 0xF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x150 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x102 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x180 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x102 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x42E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH2 0xF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x180 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x180 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x297 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E65722121000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x31C JUMPI PUSH2 0x31C PUSH2 0x4C4 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x338 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO JUMPDEST PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x22B93937B9 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH2 0x8FC DUP3 ISZERO MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH2 0x8FC DUP3 ISZERO MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SELFBALANCE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x8FC DUP4 ISZERO MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x427 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD LT PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x455 JUMPI PUSH2 0x455 PUSH2 0x4C4 JUMP JUMPDEST EQ PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x474 PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x484 DUP4 PUSH2 0x502 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x8 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0x4FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x522 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D POP PUSH5 0x7F25DA57AE 0xC2 CHAINID 0xE7 0xB8 ORIGIN MSTORE PUSH12 0x854E7465F054BD810AC6B452 0xE5 CALLDATACOPY STOP 0xD6 0xBC PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        52,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD"
    },
    "12": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6F92E149"
    },
    "25": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x88B0CBC9"
    },
    "36": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "GT",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x88B0CBC9"
    },
    "47": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x219"
    },
    "51": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "58": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23D"
    },
    "62": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD42DB0FC"
    },
    "69": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25D"
    },
    "73": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF5ED1A5D"
    },
    "80": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27D"
    },
    "84": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "REVERT",
      "path": "0"
    },
    "89": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6F92E149"
    },
    "96": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE"
    },
    "100": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7002CE42"
    },
    "107": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E3"
    },
    "111": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x78C46C4C"
    },
    "118": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x203"
    },
    "122": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "125": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "REVERT",
      "path": "0"
    },
    "127": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "128": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "129": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3B10359A"
    },
    "134": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "GT",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "138": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3B10359A"
    },
    "145": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "149": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "150": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x49CA0CE2"
    },
    "156": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x198"
    },
    "160": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "161": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x59852686"
    },
    "167": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "168": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AE"
    },
    "171": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x69D9615E"
    },
    "178": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "179": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B8"
    },
    "182": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "183": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "185": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "REVERT",
      "path": "0"
    },
    "187": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "188": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6661ABD"
    },
    "194": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2"
    },
    "198": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x138ECFD5"
    },
    "205": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B"
    },
    "209": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x209EBC08"
    },
    "216": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "EQ",
      "path": "0"
    },
    "217": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F"
    },
    "220": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "222": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "224": {
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "225": {
      "first_revert": true,
      "fn": null,
      "offset": [
        52,
        1498
      ],
      "op": "REVERT",
      "path": "0"
    },
    "226": {
      "offset": [
        132,
        149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "227": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "228": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "DUP1",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE"
    },
    "233": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "236": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "DUP1",
      "path": "0"
    },
    "237": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "REVERT",
      "path": "0"
    },
    "238": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "239": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "POP",
      "path": "0"
    },
    "240": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "243": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "245": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "246": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "DUP2",
      "path": "0"
    },
    "247": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "JUMP",
      "path": "0"
    },
    "248": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "249": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "251": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "252": {
      "op": "SWAP1"
    },
    "253": {
      "op": "DUP2"
    },
    "254": {
      "op": "MSTORE"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "257": {
      "op": "ADD"
    },
    "258": {
      "offset": [
        132,
        149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "259": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "261": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "262": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "DUP1",
      "path": "0"
    },
    "263": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "264": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "SUB",
      "path": "0"
    },
    "265": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "266": {
      "fn": null,
      "offset": [
        132,
        149
      ],
      "op": "RETURN",
      "path": "0"
    },
    "267": {
      "fn": "Will.revealBalance2",
      "offset": [
        1357,
        1494
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "268": {
      "fn": "Will.revealBalance2",
      "offset": [
        1357,
        1494
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "269": {
      "fn": "Will.revealBalance2",
      "offset": [
        1357,
        1494
      ],
      "op": "DUP1",
      "path": "0"
    },
    "270": {
      "fn": "Will.revealBalance2",
      "offset": [
        1357,
        1494
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "271": {
      "fn": "Will.revealBalance2",
      "offset": [
        1357,
        1494
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "274": {
      "fn": "Will.revealBalance2",
      "offset": [
        1357,
        1494
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "275": {
      "fn": "Will.revealBalance2",
      "offset": [
        1357,
        1494
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "277": {
      "fn": "Will.revealBalance2",
      "offset": [
        1357,
        1494
      ],
      "op": "DUP1",
      "path": "0"
    },
    "278": {
      "fn": "Will.revealBalance2",
      "offset": [
        1357,
        1494
      ],
      "op": "REVERT",
      "path": "0"
    },
    "279": {
      "fn": "Will.revealBalance2",
      "offset": [
        1357,
        1494
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "op": "POP"
    },
    "281": {
      "fn": "Will.revealBalance2",
      "offset": [
        1457,
        1468
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x9"
    },
    "283": {
      "fn": "Will.revealBalance2",
      "offset": [
        1457,
        1468
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "290": {
      "op": "SHL"
    },
    "291": {
      "op": "SUB"
    },
    "292": {
      "fn": "Will.revealBalance2",
      "offset": [
        1457,
        1468
      ],
      "op": "AND",
      "path": "0"
    },
    "293": {
      "fn": "Will.revealBalance2",
      "offset": [
        1457,
        1476
      ],
      "op": "BALANCE",
      "path": "0"
    },
    "294": {
      "fn": "Will.revealBalance2",
      "offset": [
        1451,
        1454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "296": {
      "fn": "Will.revealBalance2",
      "offset": [
        1451,
        1476
      ],
      "op": "DUP2",
      "path": "0"
    },
    "297": {
      "fn": "Will.revealBalance2",
      "offset": [
        1451,
        1476
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "298": {
      "fn": "Will.revealBalance2",
      "offset": [
        1451,
        1476
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "299": {
      "fn": "Will.revealBalance2",
      "offset": [
        1357,
        1494
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "302": {
      "fn": "Will.revealBalance2",
      "offset": [
        1357,
        1494
      ],
      "op": "JUMP",
      "path": "0"
    },
    "303": {
      "offset": [
        184,
        202
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "304": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "305": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "DUP1",
      "path": "0"
    },
    "306": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "307": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B"
    },
    "310": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "311": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "313": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "DUP1",
      "path": "0"
    },
    "314": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "REVERT",
      "path": "0"
    },
    "315": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "316": {
      "op": "POP"
    },
    "317": {
      "offset": [
        184,
        202
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "319": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "320": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x150"
    },
    "323": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "328": {
      "op": "SHL"
    },
    "329": {
      "offset": [
        184,
        202
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "330": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "DIV",
      "path": "0"
    },
    "331": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "333": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "AND",
      "path": "0"
    },
    "334": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "DUP2",
      "path": "0"
    },
    "335": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "JUMP",
      "path": "0"
    },
    "336": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "337": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "339": {
      "fn": "Will.revealBalance2",
      "offset": [
        184,
        202
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "340": {
      "op": "SWAP1"
    },
    "341": {
      "op": "ISZERO"
    },
    "342": {
      "op": "ISZERO"
    },
    "343": {
      "op": "DUP2"
    },
    "344": {
      "op": "MSTORE"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "347": {
      "op": "ADD"
    },
    "348": {
      "offset": [
        184,
        202
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "351": {
      "op": "JUMP"
    },
    "352": {
      "offset": [
        152,
        181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "353": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "354": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "355": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "356": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16C"
    },
    "359": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "360": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "362": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "DUP1",
      "path": "0"
    },
    "363": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "REVERT",
      "path": "0"
    },
    "364": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "365": {
      "op": "POP"
    },
    "366": {
      "offset": [
        152,
        181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "368": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "369": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "372": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "379": {
      "op": "SHL"
    },
    "380": {
      "op": "SUB"
    },
    "381": {
      "offset": [
        152,
        181
      ],
      "op": "AND",
      "path": "0"
    },
    "382": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "383": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "JUMP",
      "path": "0"
    },
    "384": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "385": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "387": {
      "fn": "Will.revealBalance2",
      "offset": [
        152,
        181
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "394": {
      "op": "SHL"
    },
    "395": {
      "op": "SUB"
    },
    "396": {
      "op": "SWAP1"
    },
    "397": {
      "op": "SWAP2"
    },
    "398": {
      "op": "AND"
    },
    "399": {
      "op": "DUP2"
    },
    "400": {
      "op": "MSTORE"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "403": {
      "op": "ADD"
    },
    "404": {
      "offset": [
        152,
        181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "407": {
      "op": "JUMP"
    },
    "408": {
      "offset": [
        205,
        223
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "409": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "410": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "DUP1",
      "path": "0"
    },
    "411": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "412": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "415": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "416": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "418": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "DUP1",
      "path": "0"
    },
    "419": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "REVERT",
      "path": "0"
    },
    "420": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "421": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "POP",
      "path": "0"
    },
    "422": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "425": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "427": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "428": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "DUP2",
      "path": "0"
    },
    "429": {
      "fn": "Will.revealBalance2",
      "offset": [
        205,
        223
      ],
      "op": "JUMP",
      "path": "0"
    },
    "430": {
      "fn": "Will.transferEth",
      "offset": [
        851,
        1215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "431": {
      "fn": "Will.transferEth",
      "offset": [
        851,
        1215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B6"
    },
    "434": {
      "fn": "Will.transferEth",
      "offset": [
        851,
        1215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A4"
    },
    "437": {
      "fn": "Will.transferEth",
      "jump": "i",
      "offset": [
        851,
        1215
      ],
      "op": "JUMP",
      "path": "0"
    },
    "438": {
      "fn": "Will.transferEth",
      "offset": [
        851,
        1215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "439": {
      "fn": "Will.transferEth",
      "offset": [
        851,
        1215
      ],
      "op": "STOP",
      "path": "0"
    },
    "440": {
      "offset": [
        247,
        315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "441": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "442": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "DUP1",
      "path": "0"
    },
    "443": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "444": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C4"
    },
    "447": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "448": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "450": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "DUP1",
      "path": "0"
    },
    "451": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "REVERT",
      "path": "0"
    },
    "452": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "453": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "POP",
      "path": "0"
    },
    "454": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "457": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "459": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "460": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "461": {
      "fn": "Will.transferEth",
      "offset": [
        247,
        315
      ],
      "op": "JUMP",
      "path": "0"
    },
    "462": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "463": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "464": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "DUP1",
      "path": "0"
    },
    "465": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "466": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA"
    },
    "469": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "470": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "472": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "DUP1",
      "path": "0"
    },
    "473": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "REVERT",
      "path": "0"
    },
    "474": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "475": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "POP",
      "path": "0"
    },
    "476": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B6"
    },
    "479": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42E"
    },
    "482": {
      "fn": "Will.declareDead",
      "jump": "i",
      "offset": [
        695,
        848
      ],
      "op": "JUMP",
      "path": "0"
    },
    "483": {
      "offset": [
        345,
        398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "484": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "485": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "DUP1",
      "path": "0"
    },
    "486": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "487": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "490": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "491": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "493": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "DUP1",
      "path": "0"
    },
    "494": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "REVERT",
      "path": "0"
    },
    "495": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "496": {
      "op": "POP"
    },
    "497": {
      "offset": [
        345,
        398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "500": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FE"
    },
    "503": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "504": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "506": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AB"
    },
    "509": {
      "fn": "Will.declareDead",
      "jump": "i",
      "offset": [
        345,
        398
      ],
      "op": "JUMP",
      "path": "0"
    },
    "510": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "511": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48B"
    },
    "514": {
      "fn": "Will.declareDead",
      "jump": "i",
      "offset": [
        345,
        398
      ],
      "op": "JUMP",
      "path": "0"
    },
    "515": {
      "offset": [
        226,
        244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "516": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "517": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "518": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "519": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20F"
    },
    "522": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "523": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "525": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "526": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "REVERT",
      "path": "0"
    },
    "527": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "528": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "POP",
      "path": "0"
    },
    "529": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "532": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "534": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "535": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "536": {
      "fn": "Will.declareDead",
      "offset": [
        226,
        244
      ],
      "op": "JUMP",
      "path": "0"
    },
    "537": {
      "fn": "Will.revealBalance1",
      "offset": [
        1217,
        1354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "538": {
      "fn": "Will.revealBalance1",
      "offset": [
        1217,
        1354
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "539": {
      "fn": "Will.revealBalance1",
      "offset": [
        1217,
        1354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "540": {
      "fn": "Will.revealBalance1",
      "offset": [
        1217,
        1354
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "541": {
      "fn": "Will.revealBalance1",
      "offset": [
        1217,
        1354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225"
    },
    "544": {
      "fn": "Will.revealBalance1",
      "offset": [
        1217,
        1354
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "545": {
      "fn": "Will.revealBalance1",
      "offset": [
        1217,
        1354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "547": {
      "fn": "Will.revealBalance1",
      "offset": [
        1217,
        1354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "548": {
      "fn": "Will.revealBalance1",
      "offset": [
        1217,
        1354
      ],
      "op": "REVERT",
      "path": "0"
    },
    "549": {
      "fn": "Will.revealBalance1",
      "offset": [
        1217,
        1354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "550": {
      "op": "POP"
    },
    "551": {
      "fn": "Will.revealBalance1",
      "offset": [
        1273,
        1281
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x8"
    },
    "553": {
      "fn": "Will.revealBalance1",
      "offset": [
        1273,
        1284
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "560": {
      "op": "SHL"
    },
    "561": {
      "op": "SUB"
    },
    "562": {
      "fn": "Will.revealBalance1",
      "offset": [
        1273,
        1284
      ],
      "op": "AND",
      "path": "0"
    },
    "563": {
      "fn": "Will.revealBalance1",
      "offset": [
        1273,
        1292
      ],
      "op": "BALANCE",
      "path": "0"
    },
    "564": {
      "fn": "Will.revealBalance1",
      "offset": [
        1267,
        1270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "566": {
      "fn": "Will.revealBalance1",
      "offset": [
        1267,
        1292
      ],
      "op": "DUP2",
      "path": "0"
    },
    "567": {
      "fn": "Will.revealBalance1",
      "offset": [
        1267,
        1292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "568": {
      "fn": "Will.revealBalance1",
      "offset": [
        1267,
        1292
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "569": {
      "fn": "Will.revealBalance1",
      "offset": [
        1217,
        1354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "572": {
      "fn": "Will.revealBalance1",
      "offset": [
        1217,
        1354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "573": {
      "offset": [
        69,
        97
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "574": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "575": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "DUP1",
      "path": "0"
    },
    "576": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "577": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x249"
    },
    "580": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "581": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "583": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "DUP1",
      "path": "0"
    },
    "584": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "REVERT",
      "path": "0"
    },
    "585": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "586": {
      "op": "POP"
    },
    "587": {
      "offset": [
        69,
        97
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "589": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "590": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "593": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "600": {
      "op": "SHL"
    },
    "601": {
      "op": "SUB"
    },
    "602": {
      "offset": [
        69,
        97
      ],
      "op": "AND",
      "path": "0"
    },
    "603": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "DUP2",
      "path": "0"
    },
    "604": {
      "fn": "Will.revealBalance1",
      "offset": [
        69,
        97
      ],
      "op": "JUMP",
      "path": "0"
    },
    "605": {
      "offset": [
        100,
        129
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "606": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "607": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "DUP1",
      "path": "0"
    },
    "608": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "609": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "612": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "613": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "615": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "DUP1",
      "path": "0"
    },
    "616": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "REVERT",
      "path": "0"
    },
    "617": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "618": {
      "op": "POP"
    },
    "619": {
      "offset": [
        100,
        129
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "621": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "622": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "625": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "632": {
      "op": "SHL"
    },
    "633": {
      "op": "SUB"
    },
    "634": {
      "offset": [
        100,
        129
      ],
      "op": "AND",
      "path": "0"
    },
    "635": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "DUP2",
      "path": "0"
    },
    "636": {
      "fn": "Will.revealBalance1",
      "offset": [
        100,
        129
      ],
      "op": "JUMP",
      "path": "0"
    },
    "637": {
      "offset": [
        318,
        342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "638": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "639": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "DUP1",
      "path": "0"
    },
    "640": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "641": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x289"
    },
    "644": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "645": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "647": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "DUP1",
      "path": "0"
    },
    "648": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "REVERT",
      "path": "0"
    },
    "649": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "650": {
      "op": "POP"
    },
    "651": {
      "offset": [
        318,
        342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "653": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "654": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x297"
    },
    "657": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "658": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "660": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "AND",
      "path": "0"
    },
    "661": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "662": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "JUMP",
      "path": "0"
    },
    "663": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "664": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "666": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "667": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "670": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "671": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "672": {
      "fn": "Will.revealBalance1",
      "offset": [
        318,
        342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DA"
    },
    "675": {
      "fn": "Will.revealBalance1",
      "jump": "i",
      "offset": [
        318,
        342
      ],
      "op": "JUMP",
      "path": "0"
    },
    "676": {
      "fn": "Will.transferEth",
      "offset": [
        851,
        1215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "677": {
      "offset": [
        447,
        452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "679": {
      "fn": "Will.transferEth",
      "offset": [
        447,
        452
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "686": {
      "op": "SHL"
    },
    "687": {
      "op": "SUB"
    },
    "688": {
      "offset": [
        447,
        452
      ],
      "op": "AND",
      "path": "0"
    },
    "689": {
      "offset": [
        432,
        442
      ],
      "op": "CALLER",
      "path": "0"
    },
    "690": {
      "offset": [
        432,
        452
      ],
      "op": "EQ",
      "path": "0"
    },
    "691": {
      "offset": [
        424,
        480
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x303"
    },
    "694": {
      "offset": [
        424,
        480
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "695": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "697": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "698": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "702": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "704": {
      "op": "SHL"
    },
    "705": {
      "offset": [
        424,
        480
      ],
      "op": "DUP2",
      "path": "0"
    },
    "706": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "709": {
      "offset": [
        424,
        480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "711": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "DUP3",
      "path": "0"
    },
    "712": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "ADD",
      "path": "0"
    },
    "713": {
      "op": "MSTORE"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "718": {
      "op": "DUP3"
    },
    "719": {
      "op": "ADD"
    },
    "720": {
      "op": "MSTORE"
    },
    "721": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F7420746865206F776E65722121000000000000000000"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "756": {
      "op": "DUP3"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "op": "MSTORE"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "761": {
      "op": "ADD"
    },
    "762": {
      "offset": [
        424,
        480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "763": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "765": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "766": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "DUP1",
      "path": "0"
    },
    "767": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "768": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "SUB",
      "path": "0"
    },
    "769": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "770": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "771": {
      "fn": "Will.transferEth",
      "offset": [
        424,
        480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "772": {
      "fn": "Will.transferEth",
      "offset": [
        926,
        936
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "774": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "776": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        922
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "777": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "779": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        922
      ],
      "op": "AND",
      "path": "0"
    },
    "780": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "782": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        936
      ],
      "op": "DUP2",
      "path": "0"
    },
    "783": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        936
      ],
      "op": "GT",
      "path": "0"
    },
    "784": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        936
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "785": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        936
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C"
    },
    "788": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        936
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "789": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        936
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C"
    },
    "792": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        936
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C4"
    },
    "795": {
      "fn": "Will.transferEth",
      "jump": "i",
      "offset": [
        911,
        936
      ],
      "op": "JUMP",
      "path": "0"
    },
    "796": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        936
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "797": {
      "branch": 11,
      "fn": "Will.transferEth",
      "offset": [
        911,
        936
      ],
      "op": "EQ",
      "path": "0"
    },
    "798": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "799": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        954
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "800": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x338"
    },
    "803": {
      "branch": 11,
      "fn": "Will.transferEth",
      "offset": [
        911,
        954
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "fn": "Will.transferEth",
      "offset": [
        940,
        946
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "807": {
      "fn": "Will.transferEth",
      "offset": [
        940,
        946
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "fn": "Will.transferEth",
      "offset": [
        940,
        946
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "814": {
      "fn": "Will.transferEth",
      "offset": [
        940,
        946
      ],
      "op": "DIV",
      "path": "0"
    },
    "815": {
      "fn": "Will.transferEth",
      "offset": [
        940,
        946
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "817": {
      "fn": "Will.transferEth",
      "offset": [
        940,
        946
      ],
      "op": "AND",
      "path": "0"
    },
    "818": {
      "fn": "Will.transferEth",
      "offset": [
        940,
        954
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "819": {
      "fn": "Will.transferEth",
      "offset": [
        940,
        954
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "820": {
      "fn": "Will.transferEth",
      "offset": [
        950,
        954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "822": {
      "fn": "Will.transferEth",
      "offset": [
        940,
        954
      ],
      "op": "EQ",
      "path": "0"
    },
    "823": {
      "branch": 12,
      "fn": "Will.transferEth",
      "offset": [
        940,
        954
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "824": {
      "fn": "Will.transferEth",
      "offset": [
        911,
        954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "825": {
      "fn": "Will.transferEth",
      "offset": [
        903,
        964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36C"
    },
    "828": {
      "branch": 12,
      "fn": "Will.transferEth",
      "offset": [
        903,
        964
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "829": {
      "fn": "Will.transferEth",
      "offset": [
        903,
        964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "831": {
      "fn": "Will.transferEth",
      "offset": [
        903,
        964
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "832": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "836": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "838": {
      "op": "SHL"
    },
    "839": {
      "fn": "Will.transferEth",
      "offset": [
        903,
        964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "840": {
      "fn": "Will.transferEth",
      "offset": [
        903,
        964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "843": {
      "fn": "Will.transferEth",
      "offset": [
        903,
        964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "845": {
      "fn": "Will.transferEth",
      "offset": [
        903,
        964
      ],
      "op": "DUP3",
      "path": "0"
    },
    "846": {
      "fn": "Will.transferEth",
      "offset": [
        903,
        964
      ],
      "op": "ADD",
      "path": "0"
    },
    "847": {
      "op": "MSTORE"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "852": {
      "op": "DUP3"
    },
    "853": {
      "op": "ADD"
    },
    "854": {
      "op": "MSTORE"
    },
    "855": {
      "op": "PUSH5",
      "value": "0x22B93937B9"
    },
    "861": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "863": {
      "op": "SHL"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "866": {
      "op": "DUP3"
    },
    "867": {
      "op": "ADD"
    },
    "868": {
      "op": "MSTORE"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "fn": "Will.transferEth",
      "offset": [
        903,
        964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FA"
    },
    "875": {
      "op": "JUMP"
    },
    "876": {
      "fn": "Will.transferEth",
      "offset": [
        903,
        964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "877": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        976
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x8"
    },
    "879": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        979
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "880": {
      "fn": "Will.transferEth",
      "offset": [
        989,
        1012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "882": {
      "fn": "Will.transferEth",
      "offset": [
        989,
        1012
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "883": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "885": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "892": {
      "op": "SHL"
    },
    "893": {
      "op": "SUB"
    },
    "894": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        979
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "895": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        979
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "896": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        979
      ],
      "op": "AND",
      "path": "0"
    },
    "897": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        979
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "898": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "901": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "DUP3",
      "path": "0"
    },
    "902": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "903": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "MUL",
      "path": "0"
    },
    "904": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "905": {
      "fn": "Will.transferEth",
      "offset": [
        989,
        1012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "906": {
      "fn": "Will.transferEth",
      "offset": [
        977,
        978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "908": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "909": {
      "fn": "Will.transferEth",
      "offset": [
        977,
        978
      ],
      "op": "DUP2",
      "path": "0"
    },
    "910": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "DUP2",
      "path": "0"
    },
    "911": {
      "fn": "Will.transferEth",
      "offset": [
        989,
        1012
      ],
      "op": "DUP6",
      "path": "0"
    },
    "912": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        979
      ],
      "op": "DUP9",
      "path": "0"
    },
    "913": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "DUP9",
      "path": "0"
    },
    "914": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "CALL",
      "path": "0"
    },
    "915": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "916": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "POP",
      "path": "0"
    },
    "917": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "POP",
      "path": "0"
    },
    "918": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "POP",
      "path": "0"
    },
    "919": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "POP",
      "path": "0"
    },
    "920": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "921": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "DUP1",
      "path": "0"
    },
    "922": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "923": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A8"
    },
    "926": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "927": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "928": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "930": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "DUP1",
      "path": "0"
    },
    "931": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "932": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "933": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "935": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "REVERT",
      "path": "0"
    },
    "936": {
      "fn": "Will.transferEth",
      "offset": [
        968,
        1013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "937": {
      "op": "POP"
    },
    "938": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1028
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x9"
    },
    "940": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1028
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "941": {
      "fn": "Will.transferEth",
      "offset": [
        1038,
        1061
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "943": {
      "fn": "Will.transferEth",
      "offset": [
        1038,
        1061
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "944": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "946": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "953": {
      "op": "SHL"
    },
    "954": {
      "op": "SUB"
    },
    "955": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1028
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "956": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1028
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "957": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1028
      ],
      "op": "AND",
      "path": "0"
    },
    "958": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1028
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "959": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "962": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "DUP3",
      "path": "0"
    },
    "963": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "964": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "MUL",
      "path": "0"
    },
    "965": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "966": {
      "fn": "Will.transferEth",
      "offset": [
        1038,
        1061
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "967": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1028
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "969": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "DUP2",
      "path": "0"
    },
    "970": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1028
      ],
      "op": "DUP2",
      "path": "0"
    },
    "971": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "DUP2",
      "path": "0"
    },
    "972": {
      "fn": "Will.transferEth",
      "offset": [
        1038,
        1061
      ],
      "op": "DUP6",
      "path": "0"
    },
    "973": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1028
      ],
      "op": "DUP9",
      "path": "0"
    },
    "974": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "DUP9",
      "path": "0"
    },
    "975": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "CALL",
      "path": "0"
    },
    "976": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "977": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "POP",
      "path": "0"
    },
    "978": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "POP",
      "path": "0"
    },
    "979": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "POP",
      "path": "0"
    },
    "980": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "POP",
      "path": "0"
    },
    "981": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "982": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "DUP1",
      "path": "0"
    },
    "983": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "984": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E5"
    },
    "987": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "988": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "989": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "991": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "DUP1",
      "path": "0"
    },
    "992": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "993": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "994": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "996": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "REVERT",
      "path": "0"
    },
    "997": {
      "fn": "Will.transferEth",
      "offset": [
        1017,
        1062
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "998": {
      "op": "POP"
    },
    "999": {
      "fn": "Will.transferEth",
      "offset": [
        1091,
        1112
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "1000": {
      "fn": "Will.transferEth",
      "offset": [
        1119,
        1137
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1001": {
      "branch": 13,
      "fn": "Will.transferEth",
      "offset": [
        1119,
        1137
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1002": {
      "fn": "Will.transferEth",
      "offset": [
        1116,
        1212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42B"
    },
    "1005": {
      "branch": 13,
      "fn": "Will.transferEth",
      "offset": [
        1116,
        1212
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1006": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1151
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x8"
    },
    "1008": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1154
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1009": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1011": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "op": "SUB"
    },
    "1020": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1154
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1021": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1154
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1022": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1154
      ],
      "op": "AND",
      "path": "0"
    },
    "1023": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1154
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1024": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "1027": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1028": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1029": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "MUL",
      "path": "0"
    },
    "1030": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1031": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1032": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1033": {
      "fn": "Will.transferEth",
      "offset": [
        1152,
        1153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1035": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1036": {
      "fn": "Will.transferEth",
      "offset": [
        1152,
        1153
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1037": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1038": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1039": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1154
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1040": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1041": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "CALL",
      "path": "0"
    },
    "1042": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1043": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "POP",
      "path": "0"
    },
    "1044": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "POP",
      "path": "0"
    },
    "1045": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "POP",
      "path": "0"
    },
    "1046": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "POP",
      "path": "0"
    },
    "1047": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1048": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1049": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1050": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x427"
    },
    "1053": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1054": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1055": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1057": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1058": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1059": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1060": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1062": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1063": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1064": {
      "fn": "Will.transferEth",
      "offset": [
        1143,
        1179
      ],
      "op": "POP",
      "path": "0"
    },
    "1065": {
      "fn": "Will.transferEth",
      "offset": [
        899,
        1215
      ],
      "op": "POP",
      "path": "0"
    },
    "1066": {
      "fn": "Will.transferEth",
      "jump": "o",
      "offset": [
        851,
        1215
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1067": {
      "fn": "Will.transferEth",
      "offset": [
        1116,
        1212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1068": {
      "fn": "Will.transferEth",
      "offset": [
        899,
        1215
      ],
      "op": "POP",
      "path": "0"
    },
    "1069": {
      "fn": "Will.transferEth",
      "jump": "o",
      "offset": [
        851,
        1215
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1070": {
      "fn": "Will.declareDead",
      "offset": [
        695,
        848
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1071": {
      "fn": "Will.declareDead",
      "offset": [
        745,
        746
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x2"
    },
    "1073": {
      "fn": "Will.declareDead",
      "offset": [
        737,
        742
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1074": {
      "fn": "Will.declareDead",
      "offset": [
        737,
        742
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1075": {
      "branch": 14,
      "fn": "Will.declareDead",
      "offset": [
        737,
        746
      ],
      "op": "LT",
      "path": "0"
    },
    "1076": {
      "fn": "Will.declareDead",
      "offset": [
        729,
        747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43C"
    },
    "1079": {
      "branch": 14,
      "fn": "Will.declareDead",
      "offset": [
        729,
        747
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1080": {
      "fn": "Will.declareDead",
      "offset": [
        729,
        747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1082": {
      "fn": "Will.declareDead",
      "offset": [
        729,
        747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1083": {
      "fn": "Will.declareDead",
      "offset": [
        729,
        747
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1084": {
      "fn": "Will.declareDead",
      "offset": [
        729,
        747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1085": {
      "fn": "Will.declareDead",
      "offset": [
        774,
        785
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x0"
    },
    "1087": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1089": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        770
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1090": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1092": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        770
      ],
      "op": "AND",
      "path": "0"
    },
    "1093": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1095": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        785
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1096": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        785
      ],
      "op": "GT",
      "path": "0"
    },
    "1097": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        785
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1098": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x455"
    },
    "1101": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        785
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1102": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x455"
    },
    "1105": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C4"
    },
    "1108": {
      "fn": "Will.declareDead",
      "jump": "i",
      "offset": [
        759,
        785
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1109": {
      "fn": "Will.declareDead",
      "offset": [
        759,
        785
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1110": {
      "branch": 15,
      "fn": "Will.declareDead",
      "offset": [
        759,
        785
      ],
      "op": "EQ",
      "path": "0"
    },
    "1111": {
      "fn": "Will.declareDead",
      "offset": [
        751,
        786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45F"
    },
    "1114": {
      "branch": 15,
      "fn": "Will.declareDead",
      "offset": [
        751,
        786
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1115": {
      "fn": "Will.declareDead",
      "offset": [
        751,
        786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1117": {
      "fn": "Will.declareDead",
      "offset": [
        751,
        786
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1118": {
      "fn": "Will.declareDead",
      "offset": [
        751,
        786
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1119": {
      "fn": "Will.declareDead",
      "offset": [
        751,
        786
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1120": {
      "fn": "Will.declareDead",
      "offset": [
        790,
        801
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x7"
    },
    "1122": {
      "fn": "Will.declareDead",
      "offset": [
        790,
        814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1123": {
      "fn": "Will.declareDead",
      "offset": [
        790,
        814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1126": {
      "op": "NOT"
    },
    "1127": {
      "fn": "Will.declareDead",
      "offset": [
        790,
        814
      ],
      "op": "AND",
      "path": "0"
    },
    "1128": {
      "fn": "Will.declareDead",
      "offset": [
        804,
        814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1130": {
      "fn": "Will.declareDead",
      "offset": [
        790,
        814
      ],
      "op": "OR",
      "path": "0"
    },
    "1131": {
      "fn": "Will.declareDead",
      "offset": [
        790,
        814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1132": {
      "fn": "Will.declareDead",
      "offset": [
        790,
        814
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1133": {
      "fn": "Will.declareDead",
      "offset": [
        818,
        831
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 9,
      "value": "0x474"
    },
    "1136": {
      "fn": "Will.declareDead",
      "offset": [
        818,
        829
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A4"
    },
    "1139": {
      "fn": "Will.declareDead",
      "jump": "i",
      "offset": [
        818,
        831
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1140": {
      "fn": "Will.declareDead",
      "offset": [
        818,
        831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1141": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        840
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x2"
    },
    "1143": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1144": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        842
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1145": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        842
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1146": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1148": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x484"
    },
    "1151": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        842
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1152": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x502"
    },
    "1155": {
      "fn": "Will.declareDead",
      "jump": "i",
      "offset": [
        835,
        842
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1156": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        842
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1157": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        842
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1158": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        842
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1159": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        842
      ],
      "op": "POP",
      "path": "0"
    },
    "1160": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        842
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1161": {
      "fn": "Will.declareDead",
      "offset": [
        835,
        842
      ],
      "op": "POP",
      "path": "0"
    },
    "1162": {
      "fn": "Will.declareDead",
      "jump": "o",
      "offset": [
        695,
        848
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1163": {
      "offset": [
        345,
        398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1164": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1166": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1167": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1169": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1170": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "LT",
      "path": "0"
    },
    "1171": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49B"
    },
    "1174": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1175": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1177": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1178": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1179": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1180": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "ADD",
      "path": "0"
    },
    "1181": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1188": {
      "op": "SHL"
    },
    "1189": {
      "op": "SUB"
    },
    "1190": {
      "offset": [
        345,
        398
      ],
      "op": "AND",
      "path": "0"
    },
    "1191": {
      "fn": "Will.declareDead",
      "offset": [
        345,
        398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1192": {
      "op": "POP"
    },
    "1193": {
      "offset": [
        345,
        398
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1194": {
      "fn": "Will.declareDead",
      "jump": "o",
      "offset": [
        345,
        398
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1195": {
      "op": "JUMPDEST"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1200": {
      "op": "DUP3"
    },
    "1201": {
      "op": "DUP5"
    },
    "1202": {
      "op": "SUB"
    },
    "1203": {
      "op": "SLT"
    },
    "1204": {
      "op": "ISZERO"
    },
    "1205": {
      "op": "PUSH2",
      "value": "0x4BD"
    },
    "1208": {
      "op": "JUMPI"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1211": {
      "op": "DUP1"
    },
    "1212": {
      "op": "REVERT"
    },
    "1213": {
      "op": "JUMPDEST"
    },
    "1214": {
      "op": "POP"
    },
    "1215": {
      "op": "CALLDATALOAD"
    },
    "1216": {
      "op": "SWAP2"
    },
    "1217": {
      "op": "SWAP1"
    },
    "1218": {
      "op": "POP"
    },
    "1219": {
      "jump": "o",
      "op": "JUMP"
    },
    "1220": {
      "op": "JUMPDEST"
    },
    "1221": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1228": {
      "op": "SHL"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1231": {
      "op": "MSTORE"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1236": {
      "op": "MSTORE"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1241": {
      "op": "REVERT"
    },
    "1242": {
      "op": "JUMPDEST"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1245": {
      "op": "DUP2"
    },
    "1246": {
      "op": "ADD"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1249": {
      "op": "DUP4"
    },
    "1250": {
      "op": "LT"
    },
    "1251": {
      "op": "PUSH2",
      "value": "0x4FC"
    },
    "1254": {
      "op": "JUMPI"
    },
    "1255": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1262": {
      "op": "SHL"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1265": {
      "op": "MSTORE"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1270": {
      "op": "MSTORE"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1275": {
      "op": "REVERT"
    },
    "1276": {
      "op": "JUMPDEST"
    },
    "1277": {
      "op": "SWAP2"
    },
    "1278": {
      "op": "SWAP1"
    },
    "1279": {
      "op": "MSTORE"
    },
    "1280": {
      "op": "SWAP1"
    },
    "1281": {
      "jump": "o",
      "op": "JUMP"
    },
    "1282": {
      "op": "JUMPDEST"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1287": {
      "op": "DUP3"
    },
    "1288": {
      "op": "ADD"
    },
    "1289": {
      "op": "PUSH2",
      "value": "0x522"
    },
    "1292": {
      "op": "JUMPI"
    },
    "1293": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1300": {
      "op": "SHL"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1303": {
      "op": "MSTORE"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1313": {
      "op": "REVERT"
    },
    "1314": {
      "op": "JUMPDEST"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1318": {
      "op": "ADD"
    },
    "1319": {
      "op": "SWAP1"
    },
    "1320": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ce21405bd948f6b564fdb90738115049a434fd87",
  "source": "// SPDX-License-Identifier\npragma solidity ^0.8.7;\n\ncontract Will{\n\n\taddress payable public owner;\n\taddress payable public Child1;\n\tuint public count;\n\taddress payable public Child2;\n\tbool public isPaid;\n\tuint256 public c1b;\n\tuint256 public c2b;\n\tuint256 public amountToSendToEachChild = (address(this).balance) / 2;\n\tState public parentState;\n\taddress payable[2] public children = [Child1, Child2];\n\n\tmodifier onlyOwner{\n\t\trequire(msg.sender  == owner, \"You are not the owner!!\");\n\t\t_;\n\t}\n\n\tenum State{\n\t\tAlive,\n\t\tDead\n\t}\n\n\tconstructor(address payable _c1, address payable _c2){\n\t\towner = payable(msg.sender);\n\t\tparentState = State.Alive;\n\t\tChild1 = payable(_c1);\n\t\tChild2 = payable(_c2);\n\t}\n\n\tfunction declareDead() public {\n\t\trequire(count < 2);\n\t\trequire(parentState == State.Alive);\n\t\tparentState = State.Dead;\n\t\ttransferEth();\n\t\tcount++;\t\t\n\t}\n\n\tfunction transferEth() payable public onlyOwner {\n\t\trequire(parentState == State.Dead && isPaid != true, \"Error\");\n\t\tchildren[0].transfer(amountToSendToEachChild);\n\t\tchildren[1].transfer(amountToSendToEachChild);\n\t\tuint256 currentBalance = address(this).balance;\n\t\tif(currentBalance > 0){\n\t\t\tchildren[0].transfer(currentBalance);\n\t\t}else{\n\t\t\tisPaid == true;\n\t\t}\n\t}\n\tfunction revealBalance1() public returns(uint){\n\t c1b = children[0].balance;\n\t return c1b;\n\t // uint public c2b = children[1].balance;\n\t}\n\n\tfunction revealBalance2() public returns(uint){\n\t // uint public c1b = children[0].balance;\n\t c2b = children[1].balance;\n\t return c2b;\n\t}\t\t\n}",
  "sourceMap": "52:1446:0:-:0;;;288:27;314:1;289:21;288:27;:::i;:::-;247:68;;345:53;;;;;;;;;383:6;;-1:-1:-1;;;;;383:6:0;;;345:53;;391:6;;;345:53;;;;;;;;;;:::i;:::-;;525:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;582:5;:27;;598:10;-1:-1:-1;;;;;;582:27:0;;;;;;;613:11;:25;;-1:-1:-1;;613:25:0;;;-1:-1:-1;642:21:0;;;;-1:-1:-1;;;;;642:21:0;;;;;;667:6;:21;;;;;;;;;;;;52:1446;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;52:1446:0;-1:-1:-1;;;;;52:1446:0;;;;;;;;;;;-1:-1:-1;52:1446:0;;;;;;;-1:-1:-1;52:1446:0;;;-1:-1:-1;52:1446:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:217:1;54:1;80;70:132;;124:10;119:3;115:20;112:1;105:31;159:4;156:1;149:15;187:4;184:1;177:15;70:132;-1:-1:-1;216:9:1;;14:217::o;236:185::-;323:13;;-1:-1:-1;;;;;365:31:1;;355:42;;345:70;;411:1;408;401:12;345:70;236:185;;;:::o;426:325::-;521:6;529;582:2;570:9;561:7;557:23;553:32;550:52;;;598:1;595;588:12;550:52;621:48;659:9;621:48;:::i;:::-;611:58;;688:57;741:2;730:9;726:18;688:57;:::i;:::-;678:67;;426:325;;;;;:::o;756:127::-;52:1446:0;;;;;;",
  "sourcePath": "contracts/Will.sol",
  "type": "contract"
}